/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import Entidades.Compra;
import Entidades.DepositoMensual;
import Entidades.GastoMensual;
import controladores.ControladorDepositosMensuales;
import controladores.ControladorGastosMensuales;
import controladores.controladorCompras;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.event.ListDataListener;
import utiles.Mes;

/**
 *
 * @author valkiria
 */
public class consultarSaldos extends javax.swing.JFrame {
   
    private ControladorDepositosMensuales depositosMensualesController;
    private controladorCompras comprasController;
    private ControladorGastosMensuales gastosMensualesController;
    private ImageIcon img=new ImageIcon("utiles/flechita4.png");
    private int contadorLista1=0;
    private String[] lista;
    
            /**
     * Creates new form consultarSaldos
     */
    public consultarSaldos() {
        initComponents();
        this.depositosMensualesController =new ControladorDepositosMensuales();
        this.gastosMensualesController=new ControladorGastosMensuales();
        this.comprasController=new controladorCompras();
        calcularSaldoHastaLaFecha();
        listarCuentasPendientes();
        lista =new String[1000];

    }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        saldoTotalMes = new javax.swing.JLabel();
        saldoRestanteMes = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaCuentasDisponiblesConsultasSaldos = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listasCuentasSeleccionadasConsultasSaldos = new javax.swing.JList<>();
        botonAgregarConsulta = new javax.swing.JButton();
        botonVolverAlMenuPrincipal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("SimSun", 0, 24)); // NOI18N
        jLabel1.setText("CONSULTAS A SALDOS");

        saldoTotalMes.setText("SALDO TOTAL DEL MES HASTA LA FECHA: $");

        saldoRestanteMes.setText("SALDO RESTANTE DEL MES HASTA LA FECHA: $");

        jLabel2.setText("SELECCIONA CUENTAS A AGREGAR:");

        jLabel3.setText("LOS VALORES USADOS AQUI SOLO SE USARAN PARA CALCULOS,NO AFECTARAN A LAS CUENTAS REGISTRADAS");

        jScrollPane1.setViewportView(listaCuentasDisponiblesConsultasSaldos);

        jScrollPane2.setViewportView(listasCuentasSeleccionadasConsultasSaldos);

        botonAgregarConsulta.setIcon(new javax.swing.ImageIcon("D:\\Desktop\\misproyectostami\\ContabilidadCasera\\src\\source\\flechita4.png")); // NOI18N
        botonAgregarConsulta.setBorderPainted(false);
        botonAgregarConsulta.setContentAreaFilled(false);
        botonAgregarConsulta.setFocusPainted(false);
        botonAgregarConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonAgregarConsultaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonAgregarConsultaMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonAgregarConsultaMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                botonAgregarConsultaMouseReleased(evt);
            }
        });
        botonAgregarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarConsultaActionPerformed(evt);
            }
        });

        botonVolverAlMenuPrincipal.setIcon(new javax.swing.ImageIcon("D:\\Desktop\\misproyectostami\\ContabilidadCasera\\src\\source\\flechita1.png")); // NOI18N
        botonVolverAlMenuPrincipal.setBorderPainted(false);
        botonVolverAlMenuPrincipal.setContentAreaFilled(false);
        botonVolverAlMenuPrincipal.setFocusPainted(false);
        botonVolverAlMenuPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonVolverAlMenuPrincipalMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonVolverAlMenuPrincipalMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonVolverAlMenuPrincipalMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                botonVolverAlMenuPrincipalMouseReleased(evt);
            }
        });
        botonVolverAlMenuPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverAlMenuPrincipalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonAgregarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saldoRestanteMes)
                            .addComponent(saldoTotalMes)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonVolverAlMenuPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addGap(73, 73, 73))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonVolverAlMenuPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(saldoTotalMes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saldoRestanteMes)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(90, 90, 90))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonAgregarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(106, 106, 106)))
                        .addComponent(jLabel3)
                        .addGap(106, 106, 106)))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAgregarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarConsultaActionPerformed
    }//GEN-LAST:event_botonAgregarConsultaActionPerformed

    private void botonAgregarConsultaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAgregarConsultaMouseEntered
        botonAgregarConsulta.setIcon(new javax.swing.ImageIcon("D:\\Desktop\\misproyectostami\\ContabilidadCasera\\src\\source\\flechita41.png")); // NOI18N
        
    }//GEN-LAST:event_botonAgregarConsultaMouseEntered

    private void botonAgregarConsultaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAgregarConsultaMouseExited
        botonAgregarConsulta.setIcon(new javax.swing.ImageIcon("D:\\Desktop\\misproyectostami\\ContabilidadCasera\\src\\source\\flechita4.png")); // NOI18N
    }//GEN-LAST:event_botonAgregarConsultaMouseExited

    private void botonAgregarConsultaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAgregarConsultaMousePressed
        botonAgregarConsulta.setIcon(new javax.swing.ImageIcon("D:\\Desktop\\misproyectostami\\ContabilidadCasera\\src\\source\\flechita43.png")); // NOI18N
        if(listaCuentasDisponiblesConsultasSaldos.isSelectionEmpty()){
            JOptionPane.showMessageDialog(null, "Antes de elegir seleccione una cuenta de la lista a su izquierda");
        }else{
            lista[contadorLista1]=listaCuentasDisponiblesConsultasSaldos.getSelectedValue();
            int selectedIndex= listaCuentasDisponiblesConsultasSaldos.getSelectedIndex();
            contadorLista1++;
            listasCuentasSeleccionadasConsultasSaldos.setListData(lista);

        }
    }//GEN-LAST:event_botonAgregarConsultaMousePressed

    private void botonAgregarConsultaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAgregarConsultaMouseReleased
       
    }//GEN-LAST:event_botonAgregarConsultaMouseReleased

    private void botonVolverAlMenuPrincipalMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonVolverAlMenuPrincipalMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_botonVolverAlMenuPrincipalMouseEntered

    private void botonVolverAlMenuPrincipalMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonVolverAlMenuPrincipalMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_botonVolverAlMenuPrincipalMouseExited

    private void botonVolverAlMenuPrincipalMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonVolverAlMenuPrincipalMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonVolverAlMenuPrincipalMousePressed

    private void botonVolverAlMenuPrincipalMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonVolverAlMenuPrincipalMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_botonVolverAlMenuPrincipalMouseReleased

    private void botonVolverAlMenuPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverAlMenuPrincipalActionPerformed
        MenuPrincipal mp= new MenuPrincipal();
        mp.setVisible(true);
        mp.setLocationRelativeTo(null);
        
        this.setVisible(false);
    }//GEN-LAST:event_botonVolverAlMenuPrincipalActionPerformed
    public void calcularSaldoHastaLaFecha(){
        LocalDate fechaDeHoy=LocalDate.now();
        ArrayList<DepositoMensual> depositosEsteMes=depositosMensualesController.buscarDepositosXMes(Mes.getMesXNameIngles(fechaDeHoy.getMonth().name()).name());
        double saldoTotalHastaHoy=0;
        for (DepositoMensual depositoMensual : depositosEsteMes) {
            saldoTotalHastaHoy+=depositoMensual.getDepositado();
        }
        saldoTotalMes.setText(saldoTotalMes.getText()+" "+saldoTotalHastaHoy);
        
        List<Compra> comprasDelMes=comprasController.buscarTodos();
        double precioTotalCompras=0;
        precioTotalCompras+=comprasDelMes.stream().mapToDouble(c->c.getPrecio()).sum();
        precioTotalCompras=saldoTotalHastaHoy-precioTotalCompras;
        
        saldoRestanteMes.setText(saldoRestanteMes.getText()+" "+(precioTotalCompras));
    }

    public void listarCuentasPendientes(){
        String [] listaGastos=new String[gastosMensualesController.buscarTodos().size()];
        gastosMensualesController.buscarTodos().forEach(l->listaGastos[l.getIdGastoMensual()-1]=l.getNombre());
        
        listaCuentasDisponiblesConsultasSaldos.setListData(listaGastos);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(consultarSaldos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(consultarSaldos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(consultarSaldos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(consultarSaldos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new consultarSaldos().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarConsulta;
    private javax.swing.JButton botonVolverAlMenuPrincipal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JList<String> listaCuentasDisponiblesConsultasSaldos;
    public javax.swing.JList<String> listasCuentasSeleccionadasConsultasSaldos;
    private javax.swing.JLabel saldoRestanteMes;
    private javax.swing.JLabel saldoTotalMes;
    // End of variables declaration//GEN-END:variables
//
//    public void cargarMeses(){
//        mesesConsultasSaldos.addItem("SELECCIONA UN MES");
//        for (int i = 1; i < 13; i++) {
//            mesesConsultasSaldos.addItem(Mes.getMesXid(i).obtenerStringMes());
//        }
//    }
    
}
